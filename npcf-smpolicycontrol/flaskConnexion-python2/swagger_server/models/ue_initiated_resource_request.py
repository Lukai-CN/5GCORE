# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.packet_filter_info import PacketFilterInfo  # noqa: F401,E501
from swagger_server.models.requested_qos import RequestedQos  # noqa: F401,E501
from swagger_server.models.rule_operation import RuleOperation  # noqa: F401,E501
from swagger_server import util


class UeInitiatedResourceRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, pcc_rule_id=None, rule_op=None, precedence=None, pack_filt_info=None, req_qos=None):  # noqa: E501
        """UeInitiatedResourceRequest - a model defined in Swagger

        :param pcc_rule_id: The pcc_rule_id of this UeInitiatedResourceRequest.  # noqa: E501
        :type pcc_rule_id: str
        :param rule_op: The rule_op of this UeInitiatedResourceRequest.  # noqa: E501
        :type rule_op: RuleOperation
        :param precedence: The precedence of this UeInitiatedResourceRequest.  # noqa: E501
        :type precedence: int
        :param pack_filt_info: The pack_filt_info of this UeInitiatedResourceRequest.  # noqa: E501
        :type pack_filt_info: List[PacketFilterInfo]
        :param req_qos: The req_qos of this UeInitiatedResourceRequest.  # noqa: E501
        :type req_qos: RequestedQos
        """
        self.swagger_types = {
            'pcc_rule_id': str,
            'rule_op': RuleOperation,
            'precedence': int,
            'pack_filt_info': List[PacketFilterInfo],
            'req_qos': RequestedQos
        }

        self.attribute_map = {
            'pcc_rule_id': 'pccRuleId',
            'rule_op': 'ruleOp',
            'precedence': 'precedence',
            'pack_filt_info': 'packFiltInfo',
            'req_qos': 'reqQos'
        }
        self._pcc_rule_id = pcc_rule_id
        self._rule_op = rule_op
        self._precedence = precedence
        self._pack_filt_info = pack_filt_info
        self._req_qos = req_qos

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UeInitiatedResourceRequest of this UeInitiatedResourceRequest.  # noqa: E501
        :rtype: UeInitiatedResourceRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pcc_rule_id(self):
        """Gets the pcc_rule_id of this UeInitiatedResourceRequest.


        :return: The pcc_rule_id of this UeInitiatedResourceRequest.
        :rtype: str
        """
        return self._pcc_rule_id

    @pcc_rule_id.setter
    def pcc_rule_id(self, pcc_rule_id):
        """Sets the pcc_rule_id of this UeInitiatedResourceRequest.


        :param pcc_rule_id: The pcc_rule_id of this UeInitiatedResourceRequest.
        :type pcc_rule_id: str
        """

        self._pcc_rule_id = pcc_rule_id

    @property
    def rule_op(self):
        """Gets the rule_op of this UeInitiatedResourceRequest.


        :return: The rule_op of this UeInitiatedResourceRequest.
        :rtype: RuleOperation
        """
        return self._rule_op

    @rule_op.setter
    def rule_op(self, rule_op):
        """Sets the rule_op of this UeInitiatedResourceRequest.


        :param rule_op: The rule_op of this UeInitiatedResourceRequest.
        :type rule_op: RuleOperation
        """
        if rule_op is None:
            raise ValueError("Invalid value for `rule_op`, must not be `None`")  # noqa: E501

        self._rule_op = rule_op

    @property
    def precedence(self):
        """Gets the precedence of this UeInitiatedResourceRequest.


        :return: The precedence of this UeInitiatedResourceRequest.
        :rtype: int
        """
        return self._precedence

    @precedence.setter
    def precedence(self, precedence):
        """Sets the precedence of this UeInitiatedResourceRequest.


        :param precedence: The precedence of this UeInitiatedResourceRequest.
        :type precedence: int
        """

        self._precedence = precedence

    @property
    def pack_filt_info(self):
        """Gets the pack_filt_info of this UeInitiatedResourceRequest.


        :return: The pack_filt_info of this UeInitiatedResourceRequest.
        :rtype: List[PacketFilterInfo]
        """
        return self._pack_filt_info

    @pack_filt_info.setter
    def pack_filt_info(self, pack_filt_info):
        """Sets the pack_filt_info of this UeInitiatedResourceRequest.


        :param pack_filt_info: The pack_filt_info of this UeInitiatedResourceRequest.
        :type pack_filt_info: List[PacketFilterInfo]
        """
        if pack_filt_info is None:
            raise ValueError("Invalid value for `pack_filt_info`, must not be `None`")  # noqa: E501

        self._pack_filt_info = pack_filt_info

    @property
    def req_qos(self):
        """Gets the req_qos of this UeInitiatedResourceRequest.


        :return: The req_qos of this UeInitiatedResourceRequest.
        :rtype: RequestedQos
        """
        return self._req_qos

    @req_qos.setter
    def req_qos(self, req_qos):
        """Sets the req_qos of this UeInitiatedResourceRequest.


        :param req_qos: The req_qos of this UeInitiatedResourceRequest.
        :type req_qos: RequestedQos
        """

        self._req_qos = req_qos
