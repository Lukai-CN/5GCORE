# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.access_type import AccessType  # noqa: F401,E501
from swagger_server.models.network_id import NetworkId  # noqa: F401,E501
from swagger_server.models.rat_type import RatType  # noqa: F401,E501
from swagger_server.models.serving_nf_identity import ServingNfIdentity  # noqa: F401,E501
from swagger_server.models.time_zone import TimeZone  # noqa: F401,E501
from swagger_server.models.user_location import UserLocation  # noqa: F401,E501
from swagger_server import util


class UeCampingRep(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, access_type=None, rat_type=None, serv_nf_id=None, serving_network=None, user_location_info=None, ue_time_zone=None):  # noqa: E501
        """UeCampingRep - a model defined in Swagger

        :param access_type: The access_type of this UeCampingRep.  # noqa: E501
        :type access_type: AccessType
        :param rat_type: The rat_type of this UeCampingRep.  # noqa: E501
        :type rat_type: RatType
        :param serv_nf_id: The serv_nf_id of this UeCampingRep.  # noqa: E501
        :type serv_nf_id: ServingNfIdentity
        :param serving_network: The serving_network of this UeCampingRep.  # noqa: E501
        :type serving_network: NetworkId
        :param user_location_info: The user_location_info of this UeCampingRep.  # noqa: E501
        :type user_location_info: UserLocation
        :param ue_time_zone: The ue_time_zone of this UeCampingRep.  # noqa: E501
        :type ue_time_zone: TimeZone
        """
        self.swagger_types = {
            'access_type': AccessType,
            'rat_type': RatType,
            'serv_nf_id': ServingNfIdentity,
            'serving_network': NetworkId,
            'user_location_info': UserLocation,
            'ue_time_zone': TimeZone
        }

        self.attribute_map = {
            'access_type': 'accessType',
            'rat_type': 'ratType',
            'serv_nf_id': 'servNfId',
            'serving_network': 'servingNetwork',
            'user_location_info': 'userLocationInfo',
            'ue_time_zone': 'ueTimeZone'
        }
        self._access_type = access_type
        self._rat_type = rat_type
        self._serv_nf_id = serv_nf_id
        self._serving_network = serving_network
        self._user_location_info = user_location_info
        self._ue_time_zone = ue_time_zone

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UeCampingRep of this UeCampingRep.  # noqa: E501
        :rtype: UeCampingRep
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_type(self):
        """Gets the access_type of this UeCampingRep.


        :return: The access_type of this UeCampingRep.
        :rtype: AccessType
        """
        return self._access_type

    @access_type.setter
    def access_type(self, access_type):
        """Sets the access_type of this UeCampingRep.


        :param access_type: The access_type of this UeCampingRep.
        :type access_type: AccessType
        """

        self._access_type = access_type

    @property
    def rat_type(self):
        """Gets the rat_type of this UeCampingRep.


        :return: The rat_type of this UeCampingRep.
        :rtype: RatType
        """
        return self._rat_type

    @rat_type.setter
    def rat_type(self, rat_type):
        """Sets the rat_type of this UeCampingRep.


        :param rat_type: The rat_type of this UeCampingRep.
        :type rat_type: RatType
        """

        self._rat_type = rat_type

    @property
    def serv_nf_id(self):
        """Gets the serv_nf_id of this UeCampingRep.


        :return: The serv_nf_id of this UeCampingRep.
        :rtype: ServingNfIdentity
        """
        return self._serv_nf_id

    @serv_nf_id.setter
    def serv_nf_id(self, serv_nf_id):
        """Sets the serv_nf_id of this UeCampingRep.


        :param serv_nf_id: The serv_nf_id of this UeCampingRep.
        :type serv_nf_id: ServingNfIdentity
        """

        self._serv_nf_id = serv_nf_id

    @property
    def serving_network(self):
        """Gets the serving_network of this UeCampingRep.


        :return: The serving_network of this UeCampingRep.
        :rtype: NetworkId
        """
        return self._serving_network

    @serving_network.setter
    def serving_network(self, serving_network):
        """Sets the serving_network of this UeCampingRep.


        :param serving_network: The serving_network of this UeCampingRep.
        :type serving_network: NetworkId
        """

        self._serving_network = serving_network

    @property
    def user_location_info(self):
        """Gets the user_location_info of this UeCampingRep.


        :return: The user_location_info of this UeCampingRep.
        :rtype: UserLocation
        """
        return self._user_location_info

    @user_location_info.setter
    def user_location_info(self, user_location_info):
        """Sets the user_location_info of this UeCampingRep.


        :param user_location_info: The user_location_info of this UeCampingRep.
        :type user_location_info: UserLocation
        """

        self._user_location_info = user_location_info

    @property
    def ue_time_zone(self):
        """Gets the ue_time_zone of this UeCampingRep.


        :return: The ue_time_zone of this UeCampingRep.
        :rtype: TimeZone
        """
        return self._ue_time_zone

    @ue_time_zone.setter
    def ue_time_zone(self, ue_time_zone):
        """Sets the ue_time_zone of this UeCampingRep.


        :param ue_time_zone: The ue_time_zone of this UeCampingRep.
        :type ue_time_zone: TimeZone
        """

        self._ue_time_zone = ue_time_zone
