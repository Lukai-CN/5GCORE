# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.rule_status import RuleStatus  # noqa: F401,E501
from swagger_server.models.session_rule_failure_code import SessionRuleFailureCode  # noqa: F401,E501
from swagger_server import util


class SessionRuleReport(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, rule_ids=None, rule_status=None, sess_rule_failure_code=None):  # noqa: E501
        """SessionRuleReport - a model defined in Swagger

        :param rule_ids: The rule_ids of this SessionRuleReport.  # noqa: E501
        :type rule_ids: List[str]
        :param rule_status: The rule_status of this SessionRuleReport.  # noqa: E501
        :type rule_status: RuleStatus
        :param sess_rule_failure_code: The sess_rule_failure_code of this SessionRuleReport.  # noqa: E501
        :type sess_rule_failure_code: SessionRuleFailureCode
        """
        self.swagger_types = {
            'rule_ids': List[str],
            'rule_status': RuleStatus,
            'sess_rule_failure_code': SessionRuleFailureCode
        }

        self.attribute_map = {
            'rule_ids': 'ruleIds',
            'rule_status': 'ruleStatus',
            'sess_rule_failure_code': 'sessRuleFailureCode'
        }
        self._rule_ids = rule_ids
        self._rule_status = rule_status
        self._sess_rule_failure_code = sess_rule_failure_code

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SessionRuleReport of this SessionRuleReport.  # noqa: E501
        :rtype: SessionRuleReport
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rule_ids(self):
        """Gets the rule_ids of this SessionRuleReport.

        Contains the identifier of the affected session rule(s).  # noqa: E501

        :return: The rule_ids of this SessionRuleReport.
        :rtype: List[str]
        """
        return self._rule_ids

    @rule_ids.setter
    def rule_ids(self, rule_ids):
        """Sets the rule_ids of this SessionRuleReport.

        Contains the identifier of the affected session rule(s).  # noqa: E501

        :param rule_ids: The rule_ids of this SessionRuleReport.
        :type rule_ids: List[str]
        """
        if rule_ids is None:
            raise ValueError("Invalid value for `rule_ids`, must not be `None`")  # noqa: E501

        self._rule_ids = rule_ids

    @property
    def rule_status(self):
        """Gets the rule_status of this SessionRuleReport.


        :return: The rule_status of this SessionRuleReport.
        :rtype: RuleStatus
        """
        return self._rule_status

    @rule_status.setter
    def rule_status(self, rule_status):
        """Sets the rule_status of this SessionRuleReport.


        :param rule_status: The rule_status of this SessionRuleReport.
        :type rule_status: RuleStatus
        """
        if rule_status is None:
            raise ValueError("Invalid value for `rule_status`, must not be `None`")  # noqa: E501

        self._rule_status = rule_status

    @property
    def sess_rule_failure_code(self):
        """Gets the sess_rule_failure_code of this SessionRuleReport.


        :return: The sess_rule_failure_code of this SessionRuleReport.
        :rtype: SessionRuleFailureCode
        """
        return self._sess_rule_failure_code

    @sess_rule_failure_code.setter
    def sess_rule_failure_code(self, sess_rule_failure_code):
        """Sets the sess_rule_failure_code of this SessionRuleReport.


        :param sess_rule_failure_code: The sess_rule_failure_code of this SessionRuleReport.
        :type sess_rule_failure_code: SessionRuleFailureCode
        """

        self._sess_rule_failure_code = sess_rule_failure_code
