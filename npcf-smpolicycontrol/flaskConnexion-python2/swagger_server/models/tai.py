# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.plmn_id import PlmnId  # noqa: F401,E501
from swagger_server.models.tac import Tac  # noqa: F401,E501
from swagger_server import util


class Tai(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, plmn_id=None, tac=None):  # noqa: E501
        """Tai - a model defined in Swagger

        :param plmn_id: The plmn_id of this Tai.  # noqa: E501
        :type plmn_id: PlmnId
        :param tac: The tac of this Tai.  # noqa: E501
        :type tac: Tac
        """
        self.swagger_types = {
            'plmn_id': PlmnId,
            'tac': Tac
        }

        self.attribute_map = {
            'plmn_id': 'plmnId',
            'tac': 'tac'
        }
        self._plmn_id = plmn_id
        self._tac = tac

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Tai of this Tai.  # noqa: E501
        :rtype: Tai
        """
        return util.deserialize_model(dikt, cls)

    @property
    def plmn_id(self):
        """Gets the plmn_id of this Tai.


        :return: The plmn_id of this Tai.
        :rtype: PlmnId
        """
        return self._plmn_id

    @plmn_id.setter
    def plmn_id(self, plmn_id):
        """Sets the plmn_id of this Tai.


        :param plmn_id: The plmn_id of this Tai.
        :type plmn_id: PlmnId
        """
        if plmn_id is None:
            raise ValueError("Invalid value for `plmn_id`, must not be `None`")  # noqa: E501

        self._plmn_id = plmn_id

    @property
    def tac(self):
        """Gets the tac of this Tai.


        :return: The tac of this Tai.
        :rtype: Tac
        """
        return self._tac

    @tac.setter
    def tac(self, tac):
        """Sets the tac of this Tai.


        :param tac: The tac of this Tai.
        :type tac: Tac
        """
        if tac is None:
            raise ValueError("Invalid value for `tac`, must not be `None`")  # noqa: E501

        self._tac = tac
