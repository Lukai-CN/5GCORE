# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.ambr import Ambr  # noqa: F401,E501
from swagger_server.models.eps_bearer_info import EpsBearerInfo  # noqa: F401,E501
from swagger_server.models.eps_pdn_cnx_info import EpsPdnCnxInfo  # noqa: F401,E501
from swagger_server.models.gpsi import Gpsi  # noqa: F401,E501
from swagger_server.models.ipv4_addr import Ipv4Addr  # noqa: F401,E501
from swagger_server.models.ipv6_prefix import Ipv6Prefix  # noqa: F401,E501
from swagger_server.models.max_integrity_protected_data_rate import MaxIntegrityProtectedDataRate  # noqa: F401,E501
from swagger_server.models.nf_instance_id import NfInstanceId  # noqa: F401,E501
from swagger_server.models.pdu_session_id import PduSessionId  # noqa: F401,E501
from swagger_server.models.pdu_session_type import PduSessionType  # noqa: F401,E501
from swagger_server.models.qos_flow_setup_item import QosFlowSetupItem  # noqa: F401,E501
from swagger_server.models.ref_to_binary_data import RefToBinaryData  # noqa: F401,E501
from swagger_server.models.roaming_charging_profile import RoamingChargingProfile  # noqa: F401,E501
from swagger_server.models.snssai import Snssai  # noqa: F401,E501
from swagger_server.models.supported_features import SupportedFeatures  # noqa: F401,E501
from swagger_server.models.tunnel_info import TunnelInfo  # noqa: F401,E501
from swagger_server.models.up_security import UpSecurity  # noqa: F401,E501
import re  # noqa: F401,E501
from swagger_server import util


class PduSessionCreatedData(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, pdu_session_type=None, ssc_mode=None, hcn_tunnel_info=None, session_ambr=None, qos_flows_setup_list=None, h_smf_instance_id=None, pdu_session_id=None, s_nssai=None, enable_pause_charging=False, ue_ipv4_address=None, ue_ipv6_prefix=None, n1_sm_info_to_ue=None, eps_pdn_cnx_info=None, eps_bearer_info=None, supported_features=None, max_integrity_protected_data_rate=None, always_on_granted=False, gpsi=None, up_security=None, roaming_charging_profile=None, h_smf_service_instance_id=None, recovery_time=None):  # noqa: E501
        """PduSessionCreatedData - a model defined in Swagger

        :param pdu_session_type: The pdu_session_type of this PduSessionCreatedData.  # noqa: E501
        :type pdu_session_type: PduSessionType
        :param ssc_mode: The ssc_mode of this PduSessionCreatedData.  # noqa: E501
        :type ssc_mode: str
        :param hcn_tunnel_info: The hcn_tunnel_info of this PduSessionCreatedData.  # noqa: E501
        :type hcn_tunnel_info: TunnelInfo
        :param session_ambr: The session_ambr of this PduSessionCreatedData.  # noqa: E501
        :type session_ambr: Ambr
        :param qos_flows_setup_list: The qos_flows_setup_list of this PduSessionCreatedData.  # noqa: E501
        :type qos_flows_setup_list: List[QosFlowSetupItem]
        :param h_smf_instance_id: The h_smf_instance_id of this PduSessionCreatedData.  # noqa: E501
        :type h_smf_instance_id: NfInstanceId
        :param pdu_session_id: The pdu_session_id of this PduSessionCreatedData.  # noqa: E501
        :type pdu_session_id: PduSessionId
        :param s_nssai: The s_nssai of this PduSessionCreatedData.  # noqa: E501
        :type s_nssai: Snssai
        :param enable_pause_charging: The enable_pause_charging of this PduSessionCreatedData.  # noqa: E501
        :type enable_pause_charging: bool
        :param ue_ipv4_address: The ue_ipv4_address of this PduSessionCreatedData.  # noqa: E501
        :type ue_ipv4_address: Ipv4Addr
        :param ue_ipv6_prefix: The ue_ipv6_prefix of this PduSessionCreatedData.  # noqa: E501
        :type ue_ipv6_prefix: Ipv6Prefix
        :param n1_sm_info_to_ue: The n1_sm_info_to_ue of this PduSessionCreatedData.  # noqa: E501
        :type n1_sm_info_to_ue: RefToBinaryData
        :param eps_pdn_cnx_info: The eps_pdn_cnx_info of this PduSessionCreatedData.  # noqa: E501
        :type eps_pdn_cnx_info: EpsPdnCnxInfo
        :param eps_bearer_info: The eps_bearer_info of this PduSessionCreatedData.  # noqa: E501
        :type eps_bearer_info: List[EpsBearerInfo]
        :param supported_features: The supported_features of this PduSessionCreatedData.  # noqa: E501
        :type supported_features: SupportedFeatures
        :param max_integrity_protected_data_rate: The max_integrity_protected_data_rate of this PduSessionCreatedData.  # noqa: E501
        :type max_integrity_protected_data_rate: MaxIntegrityProtectedDataRate
        :param always_on_granted: The always_on_granted of this PduSessionCreatedData.  # noqa: E501
        :type always_on_granted: bool
        :param gpsi: The gpsi of this PduSessionCreatedData.  # noqa: E501
        :type gpsi: Gpsi
        :param up_security: The up_security of this PduSessionCreatedData.  # noqa: E501
        :type up_security: UpSecurity
        :param roaming_charging_profile: The roaming_charging_profile of this PduSessionCreatedData.  # noqa: E501
        :type roaming_charging_profile: RoamingChargingProfile
        :param h_smf_service_instance_id: The h_smf_service_instance_id of this PduSessionCreatedData.  # noqa: E501
        :type h_smf_service_instance_id: str
        :param recovery_time: The recovery_time of this PduSessionCreatedData.  # noqa: E501
        :type recovery_time: datetime
        """
        self.swagger_types = {
            'pdu_session_type': PduSessionType,
            'ssc_mode': str,
            'hcn_tunnel_info': TunnelInfo,
            'session_ambr': Ambr,
            'qos_flows_setup_list': List[QosFlowSetupItem],
            'h_smf_instance_id': NfInstanceId,
            'pdu_session_id': PduSessionId,
            's_nssai': Snssai,
            'enable_pause_charging': bool,
            'ue_ipv4_address': Ipv4Addr,
            'ue_ipv6_prefix': Ipv6Prefix,
            'n1_sm_info_to_ue': RefToBinaryData,
            'eps_pdn_cnx_info': EpsPdnCnxInfo,
            'eps_bearer_info': List[EpsBearerInfo],
            'supported_features': SupportedFeatures,
            'max_integrity_protected_data_rate': MaxIntegrityProtectedDataRate,
            'always_on_granted': bool,
            'gpsi': Gpsi,
            'up_security': UpSecurity,
            'roaming_charging_profile': RoamingChargingProfile,
            'h_smf_service_instance_id': str,
            'recovery_time': datetime
        }

        self.attribute_map = {
            'pdu_session_type': 'pduSessionType',
            'ssc_mode': 'sscMode',
            'hcn_tunnel_info': 'hcnTunnelInfo',
            'session_ambr': 'sessionAmbr',
            'qos_flows_setup_list': 'qosFlowsSetupList',
            'h_smf_instance_id': 'hSmfInstanceId',
            'pdu_session_id': 'pduSessionId',
            's_nssai': 'sNssai',
            'enable_pause_charging': 'enablePauseCharging',
            'ue_ipv4_address': 'ueIpv4Address',
            'ue_ipv6_prefix': 'ueIpv6Prefix',
            'n1_sm_info_to_ue': 'n1SmInfoToUe',
            'eps_pdn_cnx_info': 'epsPdnCnxInfo',
            'eps_bearer_info': 'epsBearerInfo',
            'supported_features': 'supportedFeatures',
            'max_integrity_protected_data_rate': 'maxIntegrityProtectedDataRate',
            'always_on_granted': 'alwaysOnGranted',
            'gpsi': 'gpsi',
            'up_security': 'upSecurity',
            'roaming_charging_profile': 'roamingChargingProfile',
            'h_smf_service_instance_id': 'hSmfServiceInstanceId',
            'recovery_time': 'recoveryTime'
        }
        self._pdu_session_type = pdu_session_type
        self._ssc_mode = ssc_mode
        self._hcn_tunnel_info = hcn_tunnel_info
        self._session_ambr = session_ambr
        self._qos_flows_setup_list = qos_flows_setup_list
        self._h_smf_instance_id = h_smf_instance_id
        self._pdu_session_id = pdu_session_id
        self._s_nssai = s_nssai
        self._enable_pause_charging = enable_pause_charging
        self._ue_ipv4_address = ue_ipv4_address
        self._ue_ipv6_prefix = ue_ipv6_prefix
        self._n1_sm_info_to_ue = n1_sm_info_to_ue
        self._eps_pdn_cnx_info = eps_pdn_cnx_info
        self._eps_bearer_info = eps_bearer_info
        self._supported_features = supported_features
        self._max_integrity_protected_data_rate = max_integrity_protected_data_rate
        self._always_on_granted = always_on_granted
        self._gpsi = gpsi
        self._up_security = up_security
        self._roaming_charging_profile = roaming_charging_profile
        self._h_smf_service_instance_id = h_smf_service_instance_id
        self._recovery_time = recovery_time

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PduSessionCreatedData of this PduSessionCreatedData.  # noqa: E501
        :rtype: PduSessionCreatedData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pdu_session_type(self):
        """Gets the pdu_session_type of this PduSessionCreatedData.


        :return: The pdu_session_type of this PduSessionCreatedData.
        :rtype: PduSessionType
        """
        return self._pdu_session_type

    @pdu_session_type.setter
    def pdu_session_type(self, pdu_session_type):
        """Sets the pdu_session_type of this PduSessionCreatedData.


        :param pdu_session_type: The pdu_session_type of this PduSessionCreatedData.
        :type pdu_session_type: PduSessionType
        """
        if pdu_session_type is None:
            raise ValueError("Invalid value for `pdu_session_type`, must not be `None`")  # noqa: E501

        self._pdu_session_type = pdu_session_type

    @property
    def ssc_mode(self):
        """Gets the ssc_mode of this PduSessionCreatedData.


        :return: The ssc_mode of this PduSessionCreatedData.
        :rtype: str
        """
        return self._ssc_mode

    @ssc_mode.setter
    def ssc_mode(self, ssc_mode):
        """Sets the ssc_mode of this PduSessionCreatedData.


        :param ssc_mode: The ssc_mode of this PduSessionCreatedData.
        :type ssc_mode: str
        """
        if ssc_mode is None:
            raise ValueError("Invalid value for `ssc_mode`, must not be `None`")  # noqa: E501

        self._ssc_mode = ssc_mode

    @property
    def hcn_tunnel_info(self):
        """Gets the hcn_tunnel_info of this PduSessionCreatedData.


        :return: The hcn_tunnel_info of this PduSessionCreatedData.
        :rtype: TunnelInfo
        """
        return self._hcn_tunnel_info

    @hcn_tunnel_info.setter
    def hcn_tunnel_info(self, hcn_tunnel_info):
        """Sets the hcn_tunnel_info of this PduSessionCreatedData.


        :param hcn_tunnel_info: The hcn_tunnel_info of this PduSessionCreatedData.
        :type hcn_tunnel_info: TunnelInfo
        """
        if hcn_tunnel_info is None:
            raise ValueError("Invalid value for `hcn_tunnel_info`, must not be `None`")  # noqa: E501

        self._hcn_tunnel_info = hcn_tunnel_info

    @property
    def session_ambr(self):
        """Gets the session_ambr of this PduSessionCreatedData.


        :return: The session_ambr of this PduSessionCreatedData.
        :rtype: Ambr
        """
        return self._session_ambr

    @session_ambr.setter
    def session_ambr(self, session_ambr):
        """Sets the session_ambr of this PduSessionCreatedData.


        :param session_ambr: The session_ambr of this PduSessionCreatedData.
        :type session_ambr: Ambr
        """
        if session_ambr is None:
            raise ValueError("Invalid value for `session_ambr`, must not be `None`")  # noqa: E501

        self._session_ambr = session_ambr

    @property
    def qos_flows_setup_list(self):
        """Gets the qos_flows_setup_list of this PduSessionCreatedData.


        :return: The qos_flows_setup_list of this PduSessionCreatedData.
        :rtype: List[QosFlowSetupItem]
        """
        return self._qos_flows_setup_list

    @qos_flows_setup_list.setter
    def qos_flows_setup_list(self, qos_flows_setup_list):
        """Sets the qos_flows_setup_list of this PduSessionCreatedData.


        :param qos_flows_setup_list: The qos_flows_setup_list of this PduSessionCreatedData.
        :type qos_flows_setup_list: List[QosFlowSetupItem]
        """
        if qos_flows_setup_list is None:
            raise ValueError("Invalid value for `qos_flows_setup_list`, must not be `None`")  # noqa: E501

        self._qos_flows_setup_list = qos_flows_setup_list

    @property
    def h_smf_instance_id(self):
        """Gets the h_smf_instance_id of this PduSessionCreatedData.


        :return: The h_smf_instance_id of this PduSessionCreatedData.
        :rtype: NfInstanceId
        """
        return self._h_smf_instance_id

    @h_smf_instance_id.setter
    def h_smf_instance_id(self, h_smf_instance_id):
        """Sets the h_smf_instance_id of this PduSessionCreatedData.


        :param h_smf_instance_id: The h_smf_instance_id of this PduSessionCreatedData.
        :type h_smf_instance_id: NfInstanceId
        """
        if h_smf_instance_id is None:
            raise ValueError("Invalid value for `h_smf_instance_id`, must not be `None`")  # noqa: E501

        self._h_smf_instance_id = h_smf_instance_id

    @property
    def pdu_session_id(self):
        """Gets the pdu_session_id of this PduSessionCreatedData.


        :return: The pdu_session_id of this PduSessionCreatedData.
        :rtype: PduSessionId
        """
        return self._pdu_session_id

    @pdu_session_id.setter
    def pdu_session_id(self, pdu_session_id):
        """Sets the pdu_session_id of this PduSessionCreatedData.


        :param pdu_session_id: The pdu_session_id of this PduSessionCreatedData.
        :type pdu_session_id: PduSessionId
        """

        self._pdu_session_id = pdu_session_id

    @property
    def s_nssai(self):
        """Gets the s_nssai of this PduSessionCreatedData.


        :return: The s_nssai of this PduSessionCreatedData.
        :rtype: Snssai
        """
        return self._s_nssai

    @s_nssai.setter
    def s_nssai(self, s_nssai):
        """Sets the s_nssai of this PduSessionCreatedData.


        :param s_nssai: The s_nssai of this PduSessionCreatedData.
        :type s_nssai: Snssai
        """

        self._s_nssai = s_nssai

    @property
    def enable_pause_charging(self):
        """Gets the enable_pause_charging of this PduSessionCreatedData.


        :return: The enable_pause_charging of this PduSessionCreatedData.
        :rtype: bool
        """
        return self._enable_pause_charging

    @enable_pause_charging.setter
    def enable_pause_charging(self, enable_pause_charging):
        """Sets the enable_pause_charging of this PduSessionCreatedData.


        :param enable_pause_charging: The enable_pause_charging of this PduSessionCreatedData.
        :type enable_pause_charging: bool
        """

        self._enable_pause_charging = enable_pause_charging

    @property
    def ue_ipv4_address(self):
        """Gets the ue_ipv4_address of this PduSessionCreatedData.


        :return: The ue_ipv4_address of this PduSessionCreatedData.
        :rtype: Ipv4Addr
        """
        return self._ue_ipv4_address

    @ue_ipv4_address.setter
    def ue_ipv4_address(self, ue_ipv4_address):
        """Sets the ue_ipv4_address of this PduSessionCreatedData.


        :param ue_ipv4_address: The ue_ipv4_address of this PduSessionCreatedData.
        :type ue_ipv4_address: Ipv4Addr
        """

        self._ue_ipv4_address = ue_ipv4_address

    @property
    def ue_ipv6_prefix(self):
        """Gets the ue_ipv6_prefix of this PduSessionCreatedData.


        :return: The ue_ipv6_prefix of this PduSessionCreatedData.
        :rtype: Ipv6Prefix
        """
        return self._ue_ipv6_prefix

    @ue_ipv6_prefix.setter
    def ue_ipv6_prefix(self, ue_ipv6_prefix):
        """Sets the ue_ipv6_prefix of this PduSessionCreatedData.


        :param ue_ipv6_prefix: The ue_ipv6_prefix of this PduSessionCreatedData.
        :type ue_ipv6_prefix: Ipv6Prefix
        """

        self._ue_ipv6_prefix = ue_ipv6_prefix

    @property
    def n1_sm_info_to_ue(self):
        """Gets the n1_sm_info_to_ue of this PduSessionCreatedData.


        :return: The n1_sm_info_to_ue of this PduSessionCreatedData.
        :rtype: RefToBinaryData
        """
        return self._n1_sm_info_to_ue

    @n1_sm_info_to_ue.setter
    def n1_sm_info_to_ue(self, n1_sm_info_to_ue):
        """Sets the n1_sm_info_to_ue of this PduSessionCreatedData.


        :param n1_sm_info_to_ue: The n1_sm_info_to_ue of this PduSessionCreatedData.
        :type n1_sm_info_to_ue: RefToBinaryData
        """

        self._n1_sm_info_to_ue = n1_sm_info_to_ue

    @property
    def eps_pdn_cnx_info(self):
        """Gets the eps_pdn_cnx_info of this PduSessionCreatedData.


        :return: The eps_pdn_cnx_info of this PduSessionCreatedData.
        :rtype: EpsPdnCnxInfo
        """
        return self._eps_pdn_cnx_info

    @eps_pdn_cnx_info.setter
    def eps_pdn_cnx_info(self, eps_pdn_cnx_info):
        """Sets the eps_pdn_cnx_info of this PduSessionCreatedData.


        :param eps_pdn_cnx_info: The eps_pdn_cnx_info of this PduSessionCreatedData.
        :type eps_pdn_cnx_info: EpsPdnCnxInfo
        """

        self._eps_pdn_cnx_info = eps_pdn_cnx_info

    @property
    def eps_bearer_info(self):
        """Gets the eps_bearer_info of this PduSessionCreatedData.


        :return: The eps_bearer_info of this PduSessionCreatedData.
        :rtype: List[EpsBearerInfo]
        """
        return self._eps_bearer_info

    @eps_bearer_info.setter
    def eps_bearer_info(self, eps_bearer_info):
        """Sets the eps_bearer_info of this PduSessionCreatedData.


        :param eps_bearer_info: The eps_bearer_info of this PduSessionCreatedData.
        :type eps_bearer_info: List[EpsBearerInfo]
        """

        self._eps_bearer_info = eps_bearer_info

    @property
    def supported_features(self):
        """Gets the supported_features of this PduSessionCreatedData.


        :return: The supported_features of this PduSessionCreatedData.
        :rtype: SupportedFeatures
        """
        return self._supported_features

    @supported_features.setter
    def supported_features(self, supported_features):
        """Sets the supported_features of this PduSessionCreatedData.


        :param supported_features: The supported_features of this PduSessionCreatedData.
        :type supported_features: SupportedFeatures
        """

        self._supported_features = supported_features

    @property
    def max_integrity_protected_data_rate(self):
        """Gets the max_integrity_protected_data_rate of this PduSessionCreatedData.


        :return: The max_integrity_protected_data_rate of this PduSessionCreatedData.
        :rtype: MaxIntegrityProtectedDataRate
        """
        return self._max_integrity_protected_data_rate

    @max_integrity_protected_data_rate.setter
    def max_integrity_protected_data_rate(self, max_integrity_protected_data_rate):
        """Sets the max_integrity_protected_data_rate of this PduSessionCreatedData.


        :param max_integrity_protected_data_rate: The max_integrity_protected_data_rate of this PduSessionCreatedData.
        :type max_integrity_protected_data_rate: MaxIntegrityProtectedDataRate
        """

        self._max_integrity_protected_data_rate = max_integrity_protected_data_rate

    @property
    def always_on_granted(self):
        """Gets the always_on_granted of this PduSessionCreatedData.


        :return: The always_on_granted of this PduSessionCreatedData.
        :rtype: bool
        """
        return self._always_on_granted

    @always_on_granted.setter
    def always_on_granted(self, always_on_granted):
        """Sets the always_on_granted of this PduSessionCreatedData.


        :param always_on_granted: The always_on_granted of this PduSessionCreatedData.
        :type always_on_granted: bool
        """

        self._always_on_granted = always_on_granted

    @property
    def gpsi(self):
        """Gets the gpsi of this PduSessionCreatedData.


        :return: The gpsi of this PduSessionCreatedData.
        :rtype: Gpsi
        """
        return self._gpsi

    @gpsi.setter
    def gpsi(self, gpsi):
        """Sets the gpsi of this PduSessionCreatedData.


        :param gpsi: The gpsi of this PduSessionCreatedData.
        :type gpsi: Gpsi
        """

        self._gpsi = gpsi

    @property
    def up_security(self):
        """Gets the up_security of this PduSessionCreatedData.


        :return: The up_security of this PduSessionCreatedData.
        :rtype: UpSecurity
        """
        return self._up_security

    @up_security.setter
    def up_security(self, up_security):
        """Sets the up_security of this PduSessionCreatedData.


        :param up_security: The up_security of this PduSessionCreatedData.
        :type up_security: UpSecurity
        """

        self._up_security = up_security

    @property
    def roaming_charging_profile(self):
        """Gets the roaming_charging_profile of this PduSessionCreatedData.


        :return: The roaming_charging_profile of this PduSessionCreatedData.
        :rtype: RoamingChargingProfile
        """
        return self._roaming_charging_profile

    @roaming_charging_profile.setter
    def roaming_charging_profile(self, roaming_charging_profile):
        """Sets the roaming_charging_profile of this PduSessionCreatedData.


        :param roaming_charging_profile: The roaming_charging_profile of this PduSessionCreatedData.
        :type roaming_charging_profile: RoamingChargingProfile
        """

        self._roaming_charging_profile = roaming_charging_profile

    @property
    def h_smf_service_instance_id(self):
        """Gets the h_smf_service_instance_id of this PduSessionCreatedData.


        :return: The h_smf_service_instance_id of this PduSessionCreatedData.
        :rtype: str
        """
        return self._h_smf_service_instance_id

    @h_smf_service_instance_id.setter
    def h_smf_service_instance_id(self, h_smf_service_instance_id):
        """Sets the h_smf_service_instance_id of this PduSessionCreatedData.


        :param h_smf_service_instance_id: The h_smf_service_instance_id of this PduSessionCreatedData.
        :type h_smf_service_instance_id: str
        """

        self._h_smf_service_instance_id = h_smf_service_instance_id

    @property
    def recovery_time(self):
        """Gets the recovery_time of this PduSessionCreatedData.


        :return: The recovery_time of this PduSessionCreatedData.
        :rtype: datetime
        """
        return self._recovery_time

    @recovery_time.setter
    def recovery_time(self, recovery_time):
        """Sets the recovery_time of this PduSessionCreatedData.


        :param recovery_time: The recovery_time of this PduSessionCreatedData.
        :type recovery_time: datetime
        """

        self._recovery_time = recovery_time
