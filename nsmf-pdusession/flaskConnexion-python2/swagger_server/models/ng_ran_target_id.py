# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.global_ran_node_id import GlobalRanNodeId  # noqa: F401,E501
from swagger_server.models.tai import Tai  # noqa: F401,E501
from swagger_server import util


class NgRanTargetId(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, ran_node_id=None, tai=None):  # noqa: E501
        """NgRanTargetId - a model defined in Swagger

        :param ran_node_id: The ran_node_id of this NgRanTargetId.  # noqa: E501
        :type ran_node_id: GlobalRanNodeId
        :param tai: The tai of this NgRanTargetId.  # noqa: E501
        :type tai: Tai
        """
        self.swagger_types = {
            'ran_node_id': GlobalRanNodeId,
            'tai': Tai
        }

        self.attribute_map = {
            'ran_node_id': 'ranNodeId',
            'tai': 'tai'
        }
        self._ran_node_id = ran_node_id
        self._tai = tai

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NgRanTargetId of this NgRanTargetId.  # noqa: E501
        :rtype: NgRanTargetId
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ran_node_id(self):
        """Gets the ran_node_id of this NgRanTargetId.


        :return: The ran_node_id of this NgRanTargetId.
        :rtype: GlobalRanNodeId
        """
        return self._ran_node_id

    @ran_node_id.setter
    def ran_node_id(self, ran_node_id):
        """Sets the ran_node_id of this NgRanTargetId.


        :param ran_node_id: The ran_node_id of this NgRanTargetId.
        :type ran_node_id: GlobalRanNodeId
        """
        if ran_node_id is None:
            raise ValueError("Invalid value for `ran_node_id`, must not be `None`")  # noqa: E501

        self._ran_node_id = ran_node_id

    @property
    def tai(self):
        """Gets the tai of this NgRanTargetId.


        :return: The tai of this NgRanTargetId.
        :rtype: Tai
        """
        return self._tai

    @tai.setter
    def tai(self, tai):
        """Sets the tai of this NgRanTargetId.


        :param tai: The tai of this NgRanTargetId.
        :type tai: Tai
        """
        if tai is None:
            raise ValueError("Invalid value for `tai`, must not be `None`")  # noqa: E501

        self._tai = tai
