# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.arp import Arp  # noqa: F401,E501
from swagger_server.models.eps_bearer_id import EpsBearerId  # noqa: F401,E501
from swagger_server import util


class EbiArpMapping(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, eps_bearer_id=None, arp=None):  # noqa: E501
        """EbiArpMapping - a model defined in Swagger

        :param eps_bearer_id: The eps_bearer_id of this EbiArpMapping.  # noqa: E501
        :type eps_bearer_id: EpsBearerId
        :param arp: The arp of this EbiArpMapping.  # noqa: E501
        :type arp: Arp
        """
        self.swagger_types = {
            'eps_bearer_id': EpsBearerId,
            'arp': Arp
        }

        self.attribute_map = {
            'eps_bearer_id': 'epsBearerId',
            'arp': 'arp'
        }
        self._eps_bearer_id = eps_bearer_id
        self._arp = arp

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The EbiArpMapping of this EbiArpMapping.  # noqa: E501
        :rtype: EbiArpMapping
        """
        return util.deserialize_model(dikt, cls)

    @property
    def eps_bearer_id(self):
        """Gets the eps_bearer_id of this EbiArpMapping.


        :return: The eps_bearer_id of this EbiArpMapping.
        :rtype: EpsBearerId
        """
        return self._eps_bearer_id

    @eps_bearer_id.setter
    def eps_bearer_id(self, eps_bearer_id):
        """Sets the eps_bearer_id of this EbiArpMapping.


        :param eps_bearer_id: The eps_bearer_id of this EbiArpMapping.
        :type eps_bearer_id: EpsBearerId
        """
        if eps_bearer_id is None:
            raise ValueError("Invalid value for `eps_bearer_id`, must not be `None`")  # noqa: E501

        self._eps_bearer_id = eps_bearer_id

    @property
    def arp(self):
        """Gets the arp of this EbiArpMapping.


        :return: The arp of this EbiArpMapping.
        :rtype: Arp
        """
        return self._arp

    @arp.setter
    def arp(self, arp):
        """Sets the arp of this EbiArpMapping.


        :param arp: The arp of this EbiArpMapping.
        :type arp: Arp
        """
        if arp is None:
            raise ValueError("Invalid value for `arp`, must not be `None`")  # noqa: E501

        self._arp = arp
