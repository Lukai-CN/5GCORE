# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.qos_flow_usage_report import QosFlowUsageReport  # noqa: F401,E501
from swagger_server.models.rat_type import RatType  # noqa: F401,E501
from swagger_server import util


class SecondaryRatUsageReport(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, secondary_rat_type=None, qos_flows_usage_data=None):  # noqa: E501
        """SecondaryRatUsageReport - a model defined in Swagger

        :param secondary_rat_type: The secondary_rat_type of this SecondaryRatUsageReport.  # noqa: E501
        :type secondary_rat_type: RatType
        :param qos_flows_usage_data: The qos_flows_usage_data of this SecondaryRatUsageReport.  # noqa: E501
        :type qos_flows_usage_data: List[QosFlowUsageReport]
        """
        self.swagger_types = {
            'secondary_rat_type': RatType,
            'qos_flows_usage_data': List[QosFlowUsageReport]
        }

        self.attribute_map = {
            'secondary_rat_type': 'secondaryRatType',
            'qos_flows_usage_data': 'qosFlowsUsageData'
        }
        self._secondary_rat_type = secondary_rat_type
        self._qos_flows_usage_data = qos_flows_usage_data

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SecondaryRatUsageReport of this SecondaryRatUsageReport.  # noqa: E501
        :rtype: SecondaryRatUsageReport
        """
        return util.deserialize_model(dikt, cls)

    @property
    def secondary_rat_type(self):
        """Gets the secondary_rat_type of this SecondaryRatUsageReport.


        :return: The secondary_rat_type of this SecondaryRatUsageReport.
        :rtype: RatType
        """
        return self._secondary_rat_type

    @secondary_rat_type.setter
    def secondary_rat_type(self, secondary_rat_type):
        """Sets the secondary_rat_type of this SecondaryRatUsageReport.


        :param secondary_rat_type: The secondary_rat_type of this SecondaryRatUsageReport.
        :type secondary_rat_type: RatType
        """
        if secondary_rat_type is None:
            raise ValueError("Invalid value for `secondary_rat_type`, must not be `None`")  # noqa: E501

        self._secondary_rat_type = secondary_rat_type

    @property
    def qos_flows_usage_data(self):
        """Gets the qos_flows_usage_data of this SecondaryRatUsageReport.


        :return: The qos_flows_usage_data of this SecondaryRatUsageReport.
        :rtype: List[QosFlowUsageReport]
        """
        return self._qos_flows_usage_data

    @qos_flows_usage_data.setter
    def qos_flows_usage_data(self, qos_flows_usage_data):
        """Sets the qos_flows_usage_data of this SecondaryRatUsageReport.


        :param qos_flows_usage_data: The qos_flows_usage_data of this SecondaryRatUsageReport.
        :type qos_flows_usage_data: List[QosFlowUsageReport]
        """
        if qos_flows_usage_data is None:
            raise ValueError("Invalid value for `qos_flows_usage_data`, must not be `None`")  # noqa: E501

        self._qos_flows_usage_data = qos_flows_usage_data
